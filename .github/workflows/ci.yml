name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@master

      - name: Cache
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Bootstrap
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          npm i
        env:
          CI: true

      - name: Build
        run: |
          npm run build
        env:
          CI: true

      - name: Create Changelogs
        if: |
          github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        id: changelog
        uses: heineiuo/create-changelogs@master

      - name: Login to NPM
        if: |
          github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          echo '' >> ~/.npmrc
          echo '//registry.npmjs.org/:_authToken=${{secrets.NPM_TOKEN}}' >> ~/.npmrc
          cat ~/.npmrc

      - name: Login to Docker
        if: |
          github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          echo "${{secrets.GITHUB_TOKEN}}" | docker login docker.pkg.github.com -u ${GITHUB_ACTOR} --password-stdin
          echo "${{secrets.DOCKER_TOKEN}}" | docker login -u heineiuo --password-stdin

      - name: Publish NPM
        if: |
          github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          npm config set access public
          npm run npm-publish

      - name: Publish Docker
        if: |
          github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: |
          lerna run docker-publish
        env:
          CI: true

      - name: Create Release
        if: |
          github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{ steps.changelog.outputs.changelogs }}
          draft: false
          prerelease:
            ${{ steps.changelog.outputs.release_type == 'prerelease' }}